---
import { Icon } from "astro-icon/components";

interface NavItem {
  title: string;
  href: string;
  icon: string;
  iconColor?: string;
}

const navItems: readonly NavItem[] = [
  {
    title: "Mục lục",
    href: "/muc-luc",
    icon: "mdi:table-of-contents",
    iconColor: "text-blue-400",
  },
  {
    title: "Liên hệ",
    href: "/lien-he",
    icon: "mdi:contact",
  },
] as const;

const currentPath = Astro.url.pathname;

const isActive = (href: string) => {
  if (href === "/") {
    return currentPath === href;
  }
  return currentPath.startsWith(href);
};
---

<header
  class="sticky top-0 z-50 border-b border-dracula-current bg-dracula-background/80 backdrop-blur-sm"
>
  <div class="container mx-auto flex h-16 items-center justify-between px-4">
    <a
      href="/"
      class="flex items-center gap-2 text-xl font-bold text-dracula-foreground"
    >
      <Icon name="mdi:code-braces" class="h-8 w-8" />
      <span>OvFTeam</span>
    </a>
    <button
      id="menu-toggle"
      class="text-dracula-foreground md:hidden"
      aria-label="Toggle menu"
    >
      <Icon name="mdi:menu" class="h-6 w-6" />
    </button>
    <nav
      id="nav-menu"
      class="fixed inset-y-0 right-0 z-[60] hidden h-screen w-[300px] translate-x-full bg-dracula-background p-6 transition-transform duration-300 ease-in-out md:static md:z-auto md:flex md:h-auto md:w-auto md:translate-x-0 md:bg-transparent md:p-0"
      aria-hidden="true"
    >
      <button
        id="menu-close"
        class="absolute right-4 top-4 text-dracula-foreground md:hidden"
        aria-label="Close menu"
      >
        <Icon name="mdi:close" class="h-6 w-6" />
      </button>

      <ul
        class="flex flex-col items-start gap-6 pt-16 md:flex-row md:items-center md:gap-8 md:pt-0"
      >
        {
          navItems.map(({ title, href, icon, iconColor }) => (
            <li>
              <a
                href={href}
                class:list={[
                  "group relative flex items-center gap-2 transition-colors duration-300",
                  isActive(href)
                    ? "text-dracula-purple"
                    : "text-dracula-foreground/70 hover:text-dracula-purple",
                ]}
                aria-current={isActive(href) ? "page" : undefined}
              >
                <span class="relative flex items-center gap-2">
                  <Icon name={icon} class={`h-5 w-5 ${iconColor ?? ""}`} />
                  <span>{title}</span>
                  <span
                    class:list={[
                      "absolute -bottom-1 left-0 h-0.5 w-full origin-left transition-transform duration-300 ease-out",
                      "bg-dracula-purple",
                      isActive(href)
                        ? "scale-x-100"
                        : "scale-x-0 group-hover:scale-x-100",
                    ]}
                  />
                </span>
              </a>
            </li>
          ))
        }
      </ul>
    </nav>
    <div
      id="overlay"
      class="pointer-events-none fixed inset-0 z-[55] bg-black/50 opacity-0 transition-opacity duration-300 md:hidden"
      aria-hidden="true"
    >
    </div>
  </div>
</header>
<script>
  const menuToggle = document.getElementById("menu-toggle");
  const menuClose = document.getElementById("menu-close");
  const navMenu = document.getElementById("nav-menu");
  const overlay = document.getElementById("overlay");

  const showMenu = () => {
    navMenu?.classList.remove("hidden");
    setTimeout(() => {
      navMenu?.classList.remove("translate-x-full");
    }, 10);
    overlay?.classList.remove("pointer-events-none", "opacity-0");
    document.body.classList.add("overflow-hidden");
    navMenu?.setAttribute("aria-hidden", "false");
  };

  const hideMenu = () => {
    navMenu?.classList.add("translate-x-full");
    setTimeout(() => {
      navMenu?.classList.add("hidden");
    }, 300);
    overlay?.classList.add("pointer-events-none", "opacity-0");
    document.body.classList.remove("overflow-hidden");
    navMenu?.setAttribute("aria-hidden", "true");
  };

  menuToggle?.addEventListener("click", showMenu);
  menuClose?.addEventListener("click", hideMenu);
  overlay?.addEventListener("click", hideMenu);
  window.addEventListener("resize", () => {
    if (window.innerWidth >= 768) {
      hideMenu();
    }
  });
</script>
